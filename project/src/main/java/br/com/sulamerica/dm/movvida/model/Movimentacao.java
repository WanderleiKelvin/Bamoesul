package br.com.sulamerica.dm.movvida.model;

import java.util.ArrayList;
import java.time.LocalDate;
import java.time.DateTimeException;
import java.time.Duration;
import java.time.temporal.ChronoUnit;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class Movimentacao implements java.io.Serializable {

	static final long serialVersionUID = 1L;

	@org.kie.api.definition.type.Label("Titular ou Dependente")
	private boolean titular;
	@org.kie.api.definition.type.Label("Tipo de Movimentação")
	private java.lang.String tipo;
	@org.kie.api.definition.type.Label("Grau de Parentesco")
	private int grauParentesco;
	@org.kie.api.definition.type.Label("Data de Admissão")
	private java.time.LocalDate dataAdmissao;
	@org.kie.api.definition.type.Label("Data de Adesão")
	private java.time.LocalDate dataAdesao;
	@org.kie.api.definition.type.Label("Data de Evento")
	private java.time.LocalDate dataEvento;
	@org.kie.api.definition.type.Label("Data de Nascimento")
	private java.time.LocalDate dataNascimento;

	@org.kie.api.definition.type.Label("Lista de Data de Adesão Válida")
	private java.util.List<java.time.LocalDate> dataAdesaoValidaList;

	@org.kie.api.definition.type.Label("Resultados das Regras")
	private java.util.List<br.com.sulamerica.dm.movvida.model.Response> respostas;

	@org.kie.api.definition.type.Label("Período de Isenção da Carência")
	private int periodoIsencaoCarencia;

	@org.kie.api.definition.type.Label("Se a data de adesão for válida")
	private boolean dataAdesaoValida;

	@org.kie.api.definition.type.Label("Número de Dependentes Ativos tipo Cônjuge")
	private int numeroDependentesAtivosConjuge;

	@org.kie.api.definition.type.Label("Número de Dependentes Ativos tipo Pais")
	private int numeroDependentesAtivosPais;

	@org.kie.api.definition.type.Label("Número de Dependentes Ativos tipo Companheiro")
	private int numeroDependentesAtivosCompanheiro;

	@org.kie.api.definition.type.Label("Número de Dependentes Ativos Total")
	private int numeroDependentesAtivosTotal;

	@org.kie.api.definition.type.Label("Gerar Carência ou Não")
	private boolean gerarCarencia;

	@org.kie.api.definition.type.Label("Idade do Beneficiário da Movimentação")
	private int idade;

	@org.kie.api.definition.type.Label("A diferença de Idades entre Titular e Dependente")
	private int idadeDiferencaTitularDependente;

	@org.kie.api.definition.type.Label("A diferença de Idades entre Dependente e Titular")
	private int idadeDiferencaDependenteTitular;

	@org.kie.api.definition.type.Label("Data de Adesão Válida Início")
	private java.time.LocalDate dataAdesaoValidaInicio;

	@org.kie.api.definition.type.Label("Data de Adesão Válida Final")
	private java.time.LocalDate dataAdesaoValidaFinal;

	@org.kie.api.definition.type.Label("Idade do Titular caso a Movimentação for Dependente")
	private int idadeTitular;

	@org.kie.api.definition.type.Label("Data base de calculo")
	private java.time.LocalDate hoje;

	@org.kie.api.definition.type.Label("tipo de produto (saude ou odonto)")
	private java.lang.String produto;

	@org.kie.api.definition.type.Label("Total de número de dependentes do tipo cônjuge, indiferente se for ativo ou excluído")
	private int numeroDependentesConjugeTotal;

	@org.kie.api.definition.type.Label("Existe cpt")
	private boolean cpt;

	@org.kie.api.definition.type.Label("Numero de meses CPT")
	private int numeroMesesCPT;

	@org.kie.api.definition.type.Label("Se a movimentação possui anexo")
	private boolean existeAnexo;

	@org.kie.api.definition.type.Label("Validação do serviço do bureau")
	private boolean validacaoBureau;

	@org.kie.api.definition.type.Label("ambiente de desenvolvimento")
	private java.lang.String ambiente;

	@org.kie.api.definition.type.Label("Permite envio rdp")
	private boolean permiteEnvioRDP;

	@org.kie.api.definition.type.Label("Permite unica movimentacao de alteracao")
	private boolean permiteMovUnicaAlteracao;

	@org.kie.api.definition.type.Label("Valida setor")
	private boolean validarSetor;

	@org.kie.api.definition.type.Label("periodoRN412")
	private int periodoRN412;

	@org.kie.api.definition.type.Label(value = "Periodo de carencia para inclusao de recem nascido data quebrada")
	private int periodoCarenciaRN;

	public Movimentacao() {
	}

	public boolean isTitular() {
		return this.titular;
	}

	public void setTitular(boolean titular) {
		this.titular = titular;
	}

	public java.lang.String getTipo() {
		return this.tipo;
	}

	public void setTipo(java.lang.String tipo) {
		this.tipo = tipo;
	}

	public int getGrauParentesco() {
		return this.grauParentesco;
	}

	public void setGrauParentesco(int grauParentesco) {
		this.grauParentesco = grauParentesco;
	}

	public java.time.LocalDate getDataAdmissao() {
		return this.dataAdmissao;
	}

	public void setDataAdmissao(java.time.LocalDate dataAdmissao) {
		this.dataAdmissao = dataAdmissao;
	}

	public java.time.LocalDate getDataAdesao() {
		return this.dataAdesao;
	}

	public void setDataAdesao(java.time.LocalDate dataAdesao) {
		this.dataAdesao = dataAdesao;
	}

	public java.time.LocalDate getDataEvento() {
		return this.dataEvento;
	}

	public void setDataEvento(java.time.LocalDate dataEvento) {
		this.dataEvento = dataEvento;
	}

	public java.time.LocalDate getDataNascimento() {
		return this.dataNascimento;
	}

	public void setDataNascimento(java.time.LocalDate dataNascimento) {
		this.dataNascimento = dataNascimento;
	}

	public java.util.List<java.time.LocalDate> getDataAdesaoValidaList() {
		return this.dataAdesaoValidaList;
	}

	public void setDataAdesaoValidaList(
			java.util.List<java.time.LocalDate> dataAdesaoValidaList) {
		this.dataAdesaoValidaList = dataAdesaoValidaList;
	}

	public java.util.List<br.com.sulamerica.dm.movvida.model.Response> getRespostas() {
		return this.respostas;
	}

	public void setRespostas(
			java.util.List<br.com.sulamerica.dm.movvida.model.Response> respostas) {
		this.respostas = respostas;
	}

	public int getPeriodoIsencaoCarencia() {
		return this.periodoIsencaoCarencia;
	}

	public void setPeriodoIsencaoCarencia(int periodoIsencaoCarencia) {
		this.periodoIsencaoCarencia = periodoIsencaoCarencia;
	}

	public boolean isDataAdesaoValida() {
		return this.dataAdesaoValida;
	}

	public void setDataAdesaoValida(boolean dataAdesaoValida) {
		this.dataAdesaoValida = dataAdesaoValida;
	}

	public int getNumeroDependentesAtivosConjuge() {
		return this.numeroDependentesAtivosConjuge;
	}

	public void setNumeroDependentesAtivosConjuge(
			int numeroDependentesAtivosConjuge) {
		this.numeroDependentesAtivosConjuge = numeroDependentesAtivosConjuge;
	}

	public int getNumeroDependentesAtivosPais() {
		return this.numeroDependentesAtivosPais;
	}

	public void setNumeroDependentesAtivosPais(int numeroDependentesAtivosPais) {
		this.numeroDependentesAtivosPais = numeroDependentesAtivosPais;
	}

	public int getNumeroDependentesAtivosCompanheiro() {
		return this.numeroDependentesAtivosCompanheiro;
	}

	public void setNumeroDependentesAtivosCompanheiro(
			int numeroDependentesAtivosCompanheiro) {
		this.numeroDependentesAtivosCompanheiro = numeroDependentesAtivosCompanheiro;
	}

	public int getNumeroDependentesAtivosTotal() {
		return this.numeroDependentesAtivosTotal;
	}

	public void setNumeroDependentesAtivosTotal(int numeroDependentesAtivosTotal) {
		this.numeroDependentesAtivosTotal = numeroDependentesAtivosTotal;
	}

	public boolean isGerarCarencia() {
		return this.gerarCarencia;
	}

	public void setGerarCarencia(boolean gerarCarencia) {
		this.gerarCarencia = gerarCarencia;
	}

	public int getIdade() {
		return this.idade;
	}

	public void setIdade(int idade) {
		this.idade = idade;
	}

	public int getIdadeDiferencaTitularDependente() {
		return this.idadeDiferencaTitularDependente;
	}

	public void setIdadeDiferencaTitularDependente(
			int idadeDiferencaTitularDependente) {
		this.idadeDiferencaTitularDependente = idadeDiferencaTitularDependente;
	}

	public int getIdadeDiferencaDependenteTitular() {
		return this.idadeDiferencaDependenteTitular;
	}

	public void setIdadeDiferencaDependenteTitular(
			int idadeDiferencaDependenteTitular) {
		this.idadeDiferencaDependenteTitular = idadeDiferencaDependenteTitular;
	}

	public java.time.LocalDate getDataAdesaoValidaInicio() {
		return this.dataAdesaoValidaInicio;
	}

	public void setDataAdesaoValidaInicio(
			java.time.LocalDate dataAdesaoValidaInicio) {
		this.dataAdesaoValidaInicio = dataAdesaoValidaInicio;
	}

	public java.time.LocalDate getDataAdesaoValidaFinal() {
		return this.dataAdesaoValidaFinal;
	}

	public void setDataAdesaoValidaFinal(
			java.time.LocalDate dataAdesaoValidaFinal) {
		this.dataAdesaoValidaFinal = dataAdesaoValidaFinal;
	}

	public void addResposta(Response resposta) {
		if (respostas == null) {
			respostas = new ArrayList<Response>();
		}
		// System.out.println(resposta.getMensagem() + " " + dataAdesao + " " +
		// dataAdesaoValidaList);
		respostas.add(resposta);
	}

	public void buildDataAdesaoValidaList(Empresa empresa) {

		String carteira = empresa.getCarteira();

		dataAdesaoValidaList = new ArrayList<LocalDate>();

		System.out
				.println("=============================================================================================");
		System.out.println(carteira + " dataAdmissao: " + dataAdmissao);

		if ("empresarial".equals(carteira) || "pme".equals(carteira)) {

			analisarCarencia();

			bulidDataAdesaoValidaListPadrao(empresa.getDataInicioVigencia());

		} else {

			buildDataAdesaoValidaListAdministrado();

		}
	}

	private void analisarCarencia() {
		long diferencaDias = Duration.between(dataAdmissao.atStartOfDay(),
				dataAdesao.atStartOfDay()).toDays();

		setGerarCarencia(periodoIsencaoCarencia - diferencaDias < 0);
	}

	private LocalDate getNextDate(LocalDate actualDate, int vigenciaDayOfMonth) {
		LocalDate nextDate = actualDate.plusMonths(1);
		try {
			return nextDate.withDayOfMonth(vigenciaDayOfMonth);
		} catch (DateTimeException e) {
			return getLastDayOfMonth(nextDate, vigenciaDayOfMonth);
		}
	}

	private LocalDate getLastDayOfMonth(LocalDate date, int vigenciaDayOfMonth) {
		try {
			return date.withDayOfMonth(vigenciaDayOfMonth - 1);
		} catch (DateTimeException e) {
			return getLastDayOfMonth(date, vigenciaDayOfMonth - 1);
		}
	}

	private void bulidDataAdesaoValidaListPadrao(
			LocalDate dataInicioVigenciaEmpresa) {

		LocalDate now = hoje;
		int vigenciaDayOfMonth = dataInicioVigenciaEmpresa.getDayOfMonth();
		int nowMonth = now.getMonth().getValue();
		long between = Duration.between(dataAdmissao.atStartOfDay(),
				now.atStartOfDay()).toDays();
		if (between <= periodoIsencaoCarencia) {
			dataAdesaoValidaList.add(dataAdmissao);
			LocalDate actualDate = dataAdmissao;
			LocalDate nextDate = getNextDate(actualDate, vigenciaDayOfMonth);
			long count = Duration.between(dataAdmissao.atStartOfDay(),
					nextDate.atStartOfDay()).toDays();
			while (count <= periodoIsencaoCarencia) {
				dataAdesaoValidaList.add(nextDate);
				actualDate = nextDate;
				nextDate = getNextDate(actualDate, vigenciaDayOfMonth);
				count = Duration.between(dataAdmissao.atStartOfDay(),
						nextDate.atStartOfDay()).toDays();
			}
		} else {
			dataAdesaoValidaList.add(LocalDate.of(now.getYear(), nowMonth + 1,
					vigenciaDayOfMonth));
		}
		System.out.println("Padrao buildDataAdesaoValidaList "
				+ dataAdesaoValidaList);
		dataAdesaoValidaInicio = dataAdesaoValidaList.get(0);
		dataAdesaoValidaFinal = dataAdesaoValidaList.get(dataAdesaoValidaList
				.size() - 1);
		validateDataAdesaoPadrao();
	}

	private void buildDataAdesaoValidaListAdministrado() {
		dataAdesaoValidaList = new ArrayList<LocalDate>();
		dataAdesaoValidaInicio = hoje.minus(periodoIsencaoCarencia,
				ChronoUnit.DAYS);
		dataAdesaoValidaFinal = hoje.plus(periodoIsencaoCarencia,
				ChronoUnit.DAYS);
		System.out.println("Administrado dataAdesaoValidaInicio: "
				+ dataAdesaoValidaInicio + "  dataAdesaoValidaFinal: "
				+ dataAdesaoValidaFinal + "  data adesão entrada: "
				+ dataAdesao);
		if (dataAdesao.isAfter(dataAdesaoValidaInicio)
				&& dataAdesao.isBefore(dataAdesaoValidaFinal)) {
			dataAdesaoValida = true;
		}
		System.out.println(" dataAdesaoValida: " + dataAdesaoValida);
	}

	public void validateDataAdesaoPadrao() {
		for (int i = 0; i < dataAdesaoValidaList.size(); i++) {
			LocalDate data = dataAdesaoValidaList.get(i);
			System.out.print("data adesão válida: " + data
					+ "  data adesão entrada: " + dataAdesao);
			if (data.compareTo(dataAdesao) == 0) {
				dataAdesaoValida = true;
				System.out.println(" dataAdesaoValida: true");
				return;
			}
			System.out.println(" dataAdesaoValida: false");
		}
		dataAdesaoValida = false;

	}

	public int getIdadeTitular() {
		return this.idadeTitular;
	}

	public void setIdadeTitular(int idadeTitular) {
		this.idadeTitular = idadeTitular;
	}

	public java.time.LocalDate getHoje() {
		return this.hoje;
	}

	public void setHoje(java.time.LocalDate hoje) {
		this.hoje = hoje;
	}

	public java.lang.String getProduto() {
		return this.produto;
	}

	public void setProduto(java.lang.String produto) {
		this.produto = produto;
	}

	public int getNumeroDependentesConjugeTotal() {
		return this.numeroDependentesConjugeTotal;
	}

	public void setNumeroDependentesConjugeTotal(
			int numeroDependentesConjugeTotal) {
		this.numeroDependentesConjugeTotal = numeroDependentesConjugeTotal;
	}

	public boolean isCpt() {
		return this.cpt;
	}

	public void setCpt(boolean cpt) {
		this.cpt = cpt;
	}

	public int getNumeroMesesCPT() {
		return this.numeroMesesCPT;
	}

	public void setNumeroMesesCPT(int numeroMesesCPT) {
		this.numeroMesesCPT = numeroMesesCPT;
	}

	public boolean isExisteAnexo() {
		return this.existeAnexo;
	}

	public void setExisteAnexo(boolean existeAnexo) {
		this.existeAnexo = existeAnexo;
	}

	public boolean isValidacaoBureau() {
		return this.validacaoBureau;
	}

	public void setValidacaoBureau(boolean validacaoBureau) {
		this.validacaoBureau = validacaoBureau;
	}

	public java.lang.String getAmbiente() {
		return this.ambiente;
	}

	public void setAmbiente(java.lang.String ambiente) {
		this.ambiente = ambiente;
	}

	public boolean isPermiteEnvioRDP() {
		return this.permiteEnvioRDP;
	}

	public void setPermiteEnvioRDP(boolean permiteEnvioRDP) {
		this.permiteEnvioRDP = permiteEnvioRDP;
	}

	public boolean isPermiteMovUnicaAlteracao() {
		return this.permiteMovUnicaAlteracao;
	}

	public void setPermiteMovUnicaAlteracao(boolean permiteMovUnicaAlteracao) {
		this.permiteMovUnicaAlteracao = permiteMovUnicaAlteracao;
	}

	public boolean isValidarSetor() {
		return this.validarSetor;
	}

	public void setValidarSetor(boolean validarSetor) {
		this.validarSetor = validarSetor;
	}

	public int getPeriodoRN412() {
		return this.periodoRN412;
	}

	public void setPeriodoRN412(int periodoRN412) {
		this.periodoRN412 = periodoRN412;
	}

	public int getPeriodoCarenciaRN() {
		return this.periodoCarenciaRN;
	}

	public void setPeriodoCarenciaRN(int periodoCarenciaRN) {
		this.periodoCarenciaRN = periodoCarenciaRN;
	}

	public Movimentacao(
			boolean titular,
			java.lang.String tipo,
			int grauParentesco,
			java.time.LocalDate dataAdmissao,
			java.time.LocalDate dataAdesao,
			java.time.LocalDate dataEvento,
			java.time.LocalDate dataNascimento,
			java.util.List<java.time.LocalDate> dataAdesaoValidaList,
			java.util.List<br.com.sulamerica.dm.movvida.model.Response> respostas,
			int periodoIsencaoCarencia, boolean dataAdesaoValida,
			int numeroDependentesAtivosConjuge,
			int numeroDependentesAtivosPais,
			int numeroDependentesAtivosCompanheiro,
			int numeroDependentesAtivosTotal, boolean gerarCarencia, int idade,
			int idadeDiferencaTitularDependente,
			int idadeDiferencaDependenteTitular,
			java.time.LocalDate dataAdesaoValidaInicio,
			java.time.LocalDate dataAdesaoValidaFinal, int idadeTitular,
			java.time.LocalDate hoje, java.lang.String produto,
			int numeroDependentesConjugeTotal, boolean cpt, int numeroMesesCPT,
			boolean existeAnexo, boolean validacaoBureau,
			java.lang.String ambiente, boolean permiteEnvioRDP,
			boolean permiteMovUnicaAlteracao, boolean validarSetor,
			int periodoRN412, int periodoCarenciaRN) {
		this.titular = titular;
		this.tipo = tipo;
		this.grauParentesco = grauParentesco;
		this.dataAdmissao = dataAdmissao;
		this.dataAdesao = dataAdesao;
		this.dataEvento = dataEvento;
		this.dataNascimento = dataNascimento;
		this.dataAdesaoValidaList = dataAdesaoValidaList;
		this.respostas = respostas;
		this.periodoIsencaoCarencia = periodoIsencaoCarencia;
		this.dataAdesaoValida = dataAdesaoValida;
		this.numeroDependentesAtivosConjuge = numeroDependentesAtivosConjuge;
		this.numeroDependentesAtivosPais = numeroDependentesAtivosPais;
		this.numeroDependentesAtivosCompanheiro = numeroDependentesAtivosCompanheiro;
		this.numeroDependentesAtivosTotal = numeroDependentesAtivosTotal;
		this.gerarCarencia = gerarCarencia;
		this.idade = idade;
		this.idadeDiferencaTitularDependente = idadeDiferencaTitularDependente;
		this.idadeDiferencaDependenteTitular = idadeDiferencaDependenteTitular;
		this.dataAdesaoValidaInicio = dataAdesaoValidaInicio;
		this.dataAdesaoValidaFinal = dataAdesaoValidaFinal;
		this.idadeTitular = idadeTitular;
		this.hoje = hoje;
		this.produto = produto;
		this.numeroDependentesConjugeTotal = numeroDependentesConjugeTotal;
		this.cpt = cpt;
		this.numeroMesesCPT = numeroMesesCPT;
		this.existeAnexo = existeAnexo;
		this.validacaoBureau = validacaoBureau;
		this.ambiente = ambiente;
		this.permiteEnvioRDP = permiteEnvioRDP;
		this.permiteMovUnicaAlteracao = permiteMovUnicaAlteracao;
		this.validarSetor = validarSetor;
		this.periodoRN412 = periodoRN412;
		this.periodoCarenciaRN = periodoCarenciaRN;
	}

}